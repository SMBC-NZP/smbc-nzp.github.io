# Packages to install -----------------------------------------------------

install.packages(
  'tidyverse', # Across labs
  'nleqslv', # For radio telemetry/home range lab
  'ellipse', # For radio telemetry/home range lab
  'sp', # For radio telemetry/home range lab and others
  'rgdal', # For radio telemetry/home range lab and others
  'maptools' # For radio telemetry/home range lab and others
)

# Source code -------------------------------------------------------------

make_sigFrame <-
  function(telemetryFrame){
    telemetryFrame %>%
      transmute(
        Date = NA,
        GID = 1,
        Time = NA,
        Easting = x,
        Northing = y,
        Azimuth = bearing) %>%
      as.receiver
  }

make_bearingLines <-
  function(telemetryFrame){
    outList <- vector('list', length = nrow(telemetryFrame))
    for(i in 1:nrow(telemetryFrame)){
      xInit <- 
        telemetryFrame[i,1]
      yInit <-
        telemetryFrame[i,2]
      bearing <-
        telemetryFrame[i,3]
      outList[[i]] <-
        data.frame(
          x = c(
            xInit,
            xInit+.01*cos(pi/180*(90-bearing))
            ),
          y = c(
            yInit,
            yInit+.01*sin(pi/180*(90-bearing))
          )
        ) %>%
        as.matrix %>%
        Line %>%
        Lines(ID = i)
    }
    
      SpatialLines(
        outList, 
        proj4string = CRS('+proj=longlat +ellps=WGS84 +datum=WGS84')) %>%
      SpatialLinesDataFrame(
        data = data.frame(id = 1:nrow(telemetryFrame))
      )
  }

# The ellipse:

make_ellipsePolygon <-
  function(locFile){
    require(ellipse)
    require(sp)
    x = locFile
    ellipse(
      x$Cov_XY/(sqrt(x$Var_X)*sqrt(x$Var_Y)),
      scale=c(sqrt(x$Var_X),sqrt(x$Var_Y)),
      centre=c(x$X,x$Y)
    ) %>%
      Polygon %>%
      list %>%
      Polygons(ID = 1)
  }


